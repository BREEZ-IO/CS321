# CS321 
What we're going to need to get done:

QuizClass():
answers = AskQuestions():
chosenPlant = PickPlant(answers)
PlantInfo = SearchPlants(chosenPlant)

  AskQuestions():
  *implement GUI to generate quiz
  *get rankings from each question into readable format
  return rankings

UtilitiesClass():
  PickPlant(answers):
  *insert flooring of questions here*
  return plant

  SearchPlants(chosenPlant):
  *go through text file
  *select specific plant
  *get plant's data
  return plantInfo (as list)


PlantClass(plantType):
SetPlantVariables()
SetReminders()
AssignNickname()


InteractiveClass():
dict MyPlants
AddPlant()
RemovePlant()
ClearReminders()

GUIClass():



For the reminders:
-Again, edit the plant database so we can get info from it
-Access time/date
-Do so whenever the page is opened
-Establish 'last time watered' variable that will remain after app/page is closed
-Establish 'how long till next water' variable from which plant is being watered
-Use above 2 variables to calculate if plant needs to be watered
-If possible: Have a way for the program to give reminders if it's not open? (might need some research here)

Plants Ranked

ZZ Plant
Pothos (Beginner Friendly)
Peace Lily
Snake Plant (Beginner Friendly)
Spider Plant (low maintenance)
Aloe Vera
Air Plant
Dragon Tree
Chinese Money Plant
10 Fiddle Leaf Fig Tree

Quiz Class
Methods:

?
Questions: scale from 1(low) - 5 (high)

How many plants do you have now?
Low score: beginner plants
High score: advanced plants
I can spend 3 hours a week tending to my plants.
Low score: low maintenance plants
High score: high maintenance, indirect bright light, water often plants
I kill most of my plants (1 - yes, 5 - no)
Low score: low maintenance
High score: any plant
I want a tree
Low score: plant
High score tree.
I have a green thumb
**** add more questions. I have numbered the plants in our database from low score to high score. We can get the average score of the quiz, floor it, and recommend the plant with that score. If the score is higher than 10, we can recommend the best plant. Or maybe we could do a random number generator to choose the plant with the +/- 1 rank of their score. ****

Plant Class
Methods:

setWateringPeriod(): sets the watering period for every n days or like once a week?
